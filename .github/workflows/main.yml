name: Release Tauri App

on:
  push:
    tags:
      - "v*" # only run on tags like v1.0.0

permissions:
  contents: write


jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      # Checkout repo
      - uses: actions/checkout@v4

      # Setup Bun
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      # Setup Rust
      - uses: dtolnay/rust-toolchain@stable

      # Cache Rust + Bun deps
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.bun/install/cache
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/bun.lockb') }}

      # Install dependencies
      - name: Install dependencies
        run: bun install

      # Build Tauri app
      - name: Build Tauri app
        run: bun run tauri build

      # Rename artifacts with version + platform
      - name: Rename artifacts
        run: |
          VERSION=${GITHUB_REF_NAME} # e.g. v1.0.0
          OUTDIR=src-tauri/target/release/bundle
          mkdir -p dist
          for f in $(find $OUTDIR -type f); do
            fname=$(basename "$f")
            cp "$f" "dist/${fname%%.*}-${VERSION}-${{ matrix.platform }}.${fname##*.}"
          done

      # Upload artifacts for each platform
      - uses: actions/upload-artifact@v4
        with:
          name: tauri-${{ matrix.platform }}-${{ github.ref_name }}
          path: dist/*

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Download all artifacts
      - uses: actions/download-artifact@v4
        with:
          path: dist

      # Create GitHub Release and upload files
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: dist/**/*
